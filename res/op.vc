#operatorgroup(Declaration, xfx)
#operatorgroup(Command, fy, gt: Declaration)
#operatorgroup(Assignment, xfy, gt: Command)
#operatorgroup(Disjunction, yfx, gt: Assignment)
#operatorgroup(Conjunction, yfx, gt: Disjunction)
#operatorgroup(Negation, fy,  gt: Conjunction)
#operatorgroup(Comparison, xfx, gt: Negation)
#operatorgroup(Addition, yfx, gt: Comparison)
#operatorgroup(Multiplication, yfx, gt: Addition)
#operatorgroup(NumberSign, fx, gt: Multiplication)
#operatorgroup(Quotation, fx, gt: NumberSign)

#operator(Declaration, :=)
#operator(Command, print)
#operator(Assignment, =, +=)
#operator(Disjunction, or)
#operator(Conjunction, and)
#operator(Negation, not)
#operator(Comparison, ==, !=, <, <=, >, >=)
#operator(Addition, +, -)
#operator(Multiplication, *)
#operator(NumberSign, -)
#operator(Quotation, ')

#operatorcompile



`!=` := { x, y | not (x == y) }
`<=` := { x, y | not (x > y) }
`>=` := { x, y | not (x < y) }

`print` := { str | printr(str); newline() }
`<` := { x, y | y - x > 0 }

`not` := { x | if (x == true) false else true }

print(  2 + +(2, 1)  ) 
2 + 3 + 4
print foo bar baz
print - not x
print foo == bar == baz
print foo + * bar
print == foo

print 200
print 200 + 1
print 2*2*2*2*2*2*2*2
print 2 + 3 * 4
print 3.14
print 1.41421356237 * 1.41421356237
